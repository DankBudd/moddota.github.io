(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{169:function(e,t,i){"use strict";i.r(t),i.d(t,"frontMatter",(function(){return l})),i.d(t,"metadata",(function(){return r})),i.d(t,"rightToc",(function(){return o})),i.d(t,"default",(function(){return c}));var n=i(2),a=(i(0),i(173));i(174),i(175);const l={title:"Illusion Ability Example",author:"Noya",steamId:"76561198046984233",date:"11.01.2015"},r={id:"abilities/datadriven/illusion-ability-example",title:"Illusion Ability Example",description:"This is a lua script to properly create an illusion.",source:"@site/_articles/abilities/datadriven/illusion-ability-example.md",permalink:"/abilities/datadriven/illusion-ability-example",editUrl:"https://github.com/ModDota/moddota.github.io/edit/source/_articles/abilities/datadriven/illusion-ability-example.md",sidebar:"docs",previous:{title:"Invisibility Ability Example",permalink:"/abilities/datadriven/invisibility-ability-example"},next:{title:"Rotate Ability Example",permalink:"/abilities/datadriven/rotate-ability-example"}},o=[],s={rightToc:o};function c({components:e,...t}){return Object(a.b)("wrapper",Object(n.a)({},s,t,{components:e,mdxType:"MDXLayout"}),Object(a.b)("p",null,"This is a lua script to properly create an illusion."),Object(a.b)("p",null,'Note: Datadriven Modifiers with "AllowIllusionDuplicate" aren\'t automatically created with this method and need to be added manually in lua. In this same script we also attempt to add the datadriven version of ',Object(a.b)("inlineCode",{parentName:"p"},"modifier_metamorphosis")," which can also be found ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/Pizzalol/SpellLibrary/blob/SpellLibrary/game/dota_addons/spelllibrary/scripts/npc/abilities/terrorblade_metamorphosis_datadriven.txt"}),"here in the SpellLibrary")),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-lua"}),'-- Creates an Illusion, making use of the built in modifier_illusion\nfunction ConjureImage( event )\n print("Conjure Image")\n local caster = event.caster\n local player = caster:GetPlayerID()\n local ability = event.ability\n local unit_name = caster:GetUnitName()\n local origin = caster:GetAbsOrigin() + RandomVector(100)\n local duration = ability:GetLevelSpecialValueFor( "illusion_duration", ability:GetLevel() - 1 )\n local outgoingDamage = ability:GetLevelSpecialValueFor( "illusion_outgoing_damage", ability:GetLevel()-1)\n local incomingDamage = ability:GetLevelSpecialValueFor( "illusion_incoming_damage", ability:GetLevel()-1)\n\n -- handle_UnitOwner needs to be nil, else it will crash the game.\n local illusion = CreateUnitByName(unit_name, origin, true, caster, nil, caster:GetTeamNumber())\n illusion:SetPlayerID(caster:GetPlayerID())\n illusion:SetControllableByPlayer(player, true)\n \n -- Level Up the unit to the casters level\n local casterLevel = caster:GetLevel()\n for i=1,casterLevel-1 do\n  illusion:HeroLevelUp(false)\n end\n\n -- Set the skill points to 0 and learn the skills of the caster\n illusion:SetAbilityPoints(0)\n for abilitySlot=0,15 do\n  local ability = caster:GetAbilityByIndex(abilitySlot)\n  if ability ~= nil then \n   local abilityLevel = ability:GetLevel()\n   local abilityName = ability:GetAbilityName()\n   local illusionAbility = illusion:FindAbilityByName(abilityName)\n   illusionAbility:SetLevel(abilityLevel)\n  end\n end\n\n -- Recreate the items of the caster\n for itemSlot=0,5 do\n  local item = caster:GetItemInSlot(itemSlot)\n  if item ~= nil then\n   local itemName = item:GetName()\n   local newItem = CreateItem(itemName, illusion, illusion)\n   illusion:AddItem(newItem)\n  end\n end\n\n -- Add our datadriven Metamorphosis modifier if appropiate\n -- You can add other buffs that want to be passed to illusions this way\n if caster:HasModifier("modifier_metamorphosis") then\n  local meta_ability = caster:FindAbilityByName("terrorblade_metamorphosis_datadriven")\n  meta_ability:ApplyDataDrivenModifier(illusion, illusion, "modifier_metamorphosis", nil)\n end\n\n -- Set the unit as an illusion\n -- modifier_illusion controls many illusion properties like +Green damage not adding to the unit damage, not being able to cast spells and the team-only blue particle \n illusion:AddNewModifier(caster, ability, "modifier_illusion", { duration = duration, outgoing_damage = outgoingDamage, incoming_damage = incomingDamage })\n \n -- Without MakeIllusion the unit counts as a hero, e.g. if it dies to neutrals it says killed by neutrals, it respawns, etc.\n illusion:MakeIllusion()\n\nend\n')),Object(a.b)("p",null,"The entire ability (with its datadriven code) can be found at the SpellLibrary in github"))}c.isMDXComponent=!0},173:function(e,t,i){"use strict";i.d(t,"a",(function(){return d})),i.d(t,"b",(function(){return b}));var n=i(0),a=i.n(n);function l(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function r(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?r(Object(i),!0).forEach((function(t){l(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function s(e,t){if(null==e)return{};var i,n,a=function(e,t){if(null==e)return{};var i,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)i=l[n],t.indexOf(i)>=0||(a[i]=e[i]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)i=l[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(a[i]=e[i])}return a}var c=a.a.createContext({}),u=function(e){var t=a.a.useContext(c),i=t;return e&&(i="function"==typeof e?e(t):o(o({},t),e)),i},d=function(e){var t=u(e.components);return a.a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},p=a.a.forwardRef((function(e,t){var i=e.components,n=e.mdxType,l=e.originalType,r=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(i),p=n,b=d["".concat(r,".").concat(p)]||d[p]||m[p]||l;return i?a.a.createElement(b,o(o({ref:t},c),{},{components:i})):a.a.createElement(b,o({ref:t},c))}));function b(e,t){var i=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=i.length,r=new Array(l);r[0]=p;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,r[1]=o;for(var c=2;c<l;c++)r[c]=i[c];return a.a.createElement.apply(null,r)}return a.a.createElement.apply(null,i)}p.displayName="MDXCreateElement"},174:function(e,t,i){"use strict";i.d(t,"a",(function(){return l}));var n=i(0),a=i.n(n);function l({id:e,aspectRatio:t=4/3}){return a.a.createElement("p",{style:{position:"relative",paddingBottom:1/t*100+"%"}},a.a.createElement("iframe",{src:"https://gfycat.com/ifr/"+e,scrolling:"no",frameBorder:"0",allowFullScreen:!0,width:"100%",height:"100%",style:{position:"absolute",top:0,left:0}}))}},175:function(e,t,i){"use strict";i.d(t,"a",(function(){return l}));var n=i(0),a=i.n(n);function l({id:e,playlistId:t,aspectRatio:i=16/9}){const n=void 0!==t?"https://www.youtube.com/embed/videoseries?list="+t:"https://www.youtube.com/embed/"+e;return a.a.createElement("p",{style:{position:"relative",paddingBottom:1/i*100+"%"}},a.a.createElement("iframe",{src:n,frameBorder:"0",allowFullScreen:!0,width:"100%",height:"100%",style:{position:"absolute",top:0,left:0}}))}}}]);