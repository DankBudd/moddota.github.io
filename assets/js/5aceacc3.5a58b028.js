"use strict";(globalThis.webpackChunk=globalThis.webpackChunk||[]).push([[8090],{3905:(t,e,a)=>{a.d(e,{Zo:()=>u,kt:()=>s});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var d=n.createContext({}),p=function(t){var e=n.useContext(d),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},u=function(t){var e=p(t.components);return n.createElement(d.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},k=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,d=t.parentName,u=o(t,["components","mdxType","originalType","parentName"]),k=p(a),s=r,c=k["".concat(d,".").concat(s)]||k[s]||m[s]||l;return a?n.createElement(c,i(i({ref:e},u),{},{components:a})):n.createElement(c,i({ref:e},u))}));function s(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=k;var o={};for(var d in e)hasOwnProperty.call(e,d)&&(o[d]=e[d]);o.originalType=t,o.mdxType="string"==typeof t?t:r,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},3919:(t,e,a)=>{function n(t){return!0===/^(\w*:|\/\/)/.test(t)}function r(t){return void 0!==t&&!n(t)}a.d(e,{b:()=>n,Z:()=>r})},4996:(t,e,a)=>{a.d(e,{C:()=>l,Z:()=>i});var n=a(2263),r=a(3919);function l(){const{siteConfig:{baseUrl:t="/",url:e}={}}=(0,n.Z)();return{withBaseUrl:(a,n)=>function(t,e,a,{forcePrependBaseUrl:n=!1,absolute:l=!1}={}){if(!a)return a;if(a.startsWith("#"))return a;if((0,r.b)(a))return a;if(n)return e+a;const i=a.startsWith(e)?a:e+a.replace(/^\//,"");return l?t+i:i}(e,t,a,n)}}function i(t,e={}){const{withBaseUrl:a}=l();return a(t,e)}},8215:(t,e,a)=>{a.d(e,{Z:()=>r});var n=a(7294);const r=function({children:t,hidden:e,className:a}){return n.createElement("div",{role:"tabpanel",hidden:e,className:a},t)}},1395:(t,e,a)=>{a.d(e,{Z:()=>u});var n=a(7294),r=a(944),l=a(6010);const i="tabItem_1uMI",o="tabItemActive_2DSg";const d=37,p=39;const u=function(t){const{lazy:e,block:a,defaultValue:u,values:m,groupId:k,className:s}=t,{tabGroupChoices:c,setTabGroupChoices:g}=(0,r.Z)(),[N,h]=(0,n.useState)(u),T=n.Children.toArray(t.children),b=[];if(null!=k){const t=c[k];null!=t&&t!==N&&m.some((e=>e.value===t))&&h(t)}const y=t=>{const e=t.currentTarget,a=b.indexOf(e),n=m[a].value;h(n),null!=k&&(g(k,n),setTimeout((()=>{(function(t){const{top:e,left:a,bottom:n,right:r}=t.getBoundingClientRect(),{innerHeight:l,innerWidth:i}=window;return e>=0&&r<=i&&n<=l&&a>=0})(e)||(e.scrollIntoView({block:"center",behavior:"smooth"}),e.classList.add(o),setTimeout((()=>e.classList.remove(o)),2e3))}),150))},A=t=>{var e;let a;switch(t.keyCode){case p:{const e=b.indexOf(t.target)+1;a=b[e]||b[0];break}case d:{const e=b.indexOf(t.target)-1;a=b[e]||b[b.length-1];break}}null==(e=a)||e.focus()};return n.createElement("div",{className:"tabs-container"},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":a},s)},m.map((({value:t,label:e})=>n.createElement("li",{role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,className:(0,l.Z)("tabs__item",i,{"tabs__item--active":N===t}),key:t,ref:t=>b.push(t),onKeyDown:A,onFocus:y,onClick:y},e)))),e?(0,n.cloneElement)(T.filter((t=>t.props.value===N))[0],{className:"margin-vert--md"}):n.createElement("div",{className:"margin-vert--md"},T.map(((t,e)=>(0,n.cloneElement)(t,{key:e,hidden:t.props.value!==N})))))}},9443:(t,e,a)=>{a.d(e,{Z:()=>n});const n=(0,a(7294).createContext)(void 0)},944:(t,e,a)=>{a.d(e,{Z:()=>l});var n=a(7294),r=a(9443);const l=function(){const t=(0,n.useContext)(r.Z);if(null==t)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return t}},7840:(t,e,a)=>{a.d(e,{s:()=>r});var n=a(7294);function r({id:t,aspectRatio:e=4/3,hd:a="0"}){return n.createElement("p",{style:{position:"relative",paddingBottom:1/e*100+"%"}},n.createElement("iframe",{src:`https://gfycat.com/ifr/${t}?hd=${a}`,scrolling:"no",frameBorder:"0",allowFullScreen:!0,width:"100%",height:"100%",style:{position:"absolute",top:0,left:0}}))}},8173:(t,e,a)=>{a.d(e,{s:()=>d});var n=a(2177),r=a(8215),l=a(1395),i=a(7294);const o={lua:"Lua",ts:"TypeScript",tsx:"TypeScript",js:"JavaScript",jsx:"JavaScript"};function d({children:t,group:e,titles:a}){(0,n.Z)("string"==typeof e||void 0===e);const d=i.Children.toArray(t).map(((t,e)=>{var n;const r=(null==(n=t.props.children.props.className)?void 0:n.replace(/language-/,""))??`Tab ${e+1}`;return{id:e,languageName:(void 0!==a&&a.length>0?a.split("|"):[])[e]??o[r]??r,element:t}}));return i.createElement(l.Z,{groupId:void 0!==e?`multi-code-block-${e}`:void 0,defaultValue:d[0].id,values:d.map((({id:t,languageName:e})=>({value:t,label:e})))},d.map((({id:t,element:e})=>i.createElement(r.Z,{key:t,value:t},e))))}},6776:(t,e,a)=>{a.d(e,{X:()=>l});var n=a(4996),r=a(7294);function l({path:t,controls:e=!1}){return r.createElement("video",{width:"100%",height:"100%",autoPlay:!0,muted:!0,loop:!0,controls:e},r.createElement("source",{src:(0,n.Z)(t),type:"video/mp4"}))}},8129:(t,e,a)=>{a.d(e,{_:()=>r});var n=a(7294);function r({id:t,playlistId:e,aspectRatio:a=16/9}){const r=void 0!==e?`https://www.youtube.com/embed/videoseries?list=${e}`:`https://www.youtube.com/embed/${t}`;return n.createElement("p",{style:{position:"relative",paddingBottom:1/a*100+"%"}},n.createElement("iframe",{src:r,frameBorder:"0",allowFullScreen:!0,width:"100%",height:"100%",style:{position:"absolute",top:0,left:0}}))}},7365:(t,e,a)=>{a.r(e),a.d(e,{frontMatter:()=>l,metadata:()=>i,toc:()=>o,default:()=>p});var n=a(7462),r=(a(7294),a(3905));a(1395),a(8215),a(7840),a(8129),a(8173),a(6776);const l={title:"All about the Target",author:"Noya",steamId:"76561198046984233",date:"23.01.2015"},i={unversionedId:"abilities/datadriven/all-about-the-target",id:"abilities/datadriven/all-about-the-target",isDocsHomePage:!1,title:"All about the Target",description:"I wanted to review a very old thread which was posted almost one year ago but still isn't completely well documented anywhere:",source:"@site/_articles/abilities/datadriven/all-about-the-target.md",sourceDirName:"abilities/datadriven",slug:"/abilities/datadriven/all-about-the-target",permalink:"/abilities/datadriven/all-about-the-target",editUrl:"https://github.com/ModDota/moddota.github.io/edit/source/_articles/abilities/datadriven/all-about-the-target.md",version:"current",frontMatter:{title:"All about the Target",author:"Noya",steamId:"76561198046984233",date:"23.01.2015"},sidebar:"tutorials",previous:{title:"DataDriven Ability Events & Modifiers",permalink:"/abilities/datadriven/datadriven-ability-events-modifiers"},next:{title:"Channeling Animations",permalink:"/abilities/datadriven/channeling-animations"}},o=[{value:"ABILITY EVENT CONTEXTS",id:"ability-event-contexts",children:[{value:"Behavior: DOTA_ABILITY_BEHAVIOR_NO_TARGET",id:"behavior-dota_ability_behavior_no_target",children:[]},{value:"DOTA_ABILITY_BEHAVIOR_UNIT_TARGET",id:"dota_ability_behavior_unit_target",children:[]},{value:"AbilityChannelTime &gt; 0",id:"abilitychanneltime--0",children:[]},{value:"With Linear and Tracking Projectile Actions",id:"with-linear-and-tracking-projectile-actions",children:[]},{value:"DOTA_ABILITY_BEHAVIOR_TOGGLE",id:"dota_ability_behavior_toggle",children:[]},{value:"Item pickup and drop",id:"item-pickup-and-drop",children:[]},{value:"Any Behavior",id:"any-behavior",children:[]}]},{value:"MODIFER EVENT CONTEXTS",id:"modifer-event-contexts",children:[{value:"Caster-Target",id:"caster-target",children:[]},{value:"Damage",id:"damage",children:[]},{value:"Attacks",id:"attacks",children:[]},{value:"Killing",id:"killing",children:[]},{value:"Caster-Unit",id:"caster-unit",children:[]},{value:"Never Triggered",id:"never-triggered",children:[]}]}],d={toc:o};function p({components:t,...e}){return(0,r.kt)("wrapper",(0,n.Z)({},d,e,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"I wanted to review a ",(0,r.kt)("a",{parentName:"p",href:"http://moddota.com/cmsinternal/index.php/tet/pre-empting-problems-in-dota"},"very old thread")," which was posted almost one year ago but still isn't completely well documented anywhere:"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},'"Target" is one bitch of a key.')),(0,r.kt)("p",null,"And yet, it's arguably the most important KV to understand, as its found in almost every datadriven Action."),(0,r.kt)("p",null,"Having a wrong ",(0,r.kt)("inlineCode",{parentName:"p"},'"Target"')," block is the number one reason of having to relaunch the game, testing with many combinations until you finally get the right context."),(0,r.kt)("p",null,"Quoting the ",(0,r.kt)("a",{parentName:"p",href:"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/Abilities_Data_Driven#Action_Target_Values"},"wiki")," on this:"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Note:\tThese names mean different things in different events. It may require some experimentation to discover exactly what in each case.")),(0,r.kt)("p",null,"This thread intends to compile every Target-related decision."),(0,r.kt)("p",null,"To test everything and get results, I used some simple scrips to test which parameters are seen in each event context. The KV and Lua Scripts are found in the second post, which also contains all the debug data."),(0,r.kt)("p",null,"After running many tests with different ability behaviors, here's what I got:"),(0,r.kt)("h2",{id:"ability-event-contexts"},"ABILITY EVENT CONTEXTS"),(0,r.kt)("h3",{id:"behavior-dota_ability_behavior_no_target"},"Behavior: DOTA_ABILITY_BEHAVIOR_NO_TARGET"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Event"),(0,r.kt)("th",{parentName:"tr",align:null},"Target"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnSpellStart"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER, UNIT, ATTACKER")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnAbilityPhaseStart"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER, UNIT, ATTACKER")))),(0,r.kt)("h3",{id:"dota_ability_behavior_unit_target"},"DOTA_ABILITY_BEHAVIOR_UNIT_TARGET"),(0,r.kt)("p",null,"This behavior adds TARGET as a possible value for the Target key:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Event"),(0,r.kt)("th",{parentName:"tr",align:null},"Target"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnSpellStart"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER, TARGET, UNIT, ATTACKER")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnAbilityPhaseStart"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER, TARGET, UNIT, ATTACKER")))),(0,r.kt)("h3",{id:"abilitychanneltime--0"},"AbilityChannelTime > 0"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"DOTA_ABILITY_BEHAVIOR_CHANNELLED")," only purpose is to change the ability Tooltip to ",(0,r.kt)("em",{parentName:"p"},'"Channeled"'),". In fact, the ",(0,r.kt)("inlineCode",{parentName:"p"},"BEHAVIOR_CHANNELED")," isn't even needed, ",(0,r.kt)("inlineCode",{parentName:"p"},'"AbilityChannelTime"')," is all that matters for the actual ability behavior."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Event"),(0,r.kt)("th",{parentName:"tr",align:null},"Target"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnChannelFinish"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER, TARGET, UNIT, ATTACKER")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnChannelInterrupted"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER, TARGET, UNIT, ATTACKER")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnChannelSucceeded"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER, TARGET, UNIT, ATTACKER")))),(0,r.kt)("h3",{id:"with-linear-and-tracking-projectile-actions"},"With Linear and Tracking Projectile Actions"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Event"),(0,r.kt)("th",{parentName:"tr",align:null},"Target"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnProjectileFinish"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER, TARGET, PROJECTILE")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnProjectileHitUnit"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER, TARGET, PROJECTILE")))),(0,r.kt)("h3",{id:"dota_ability_behavior_toggle"},"DOTA_ABILITY_BEHAVIOR_TOGGLE"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Event"),(0,r.kt)("th",{parentName:"tr",align:null},"Target"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnToggleOff"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnToggleOn"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER")))),(0,r.kt)("h3",{id:"item-pickup-and-drop"},"Item pickup and drop"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Event"),(0,r.kt)("th",{parentName:"tr",align:null},"Target"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnEquip"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnUnequip"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER")))),(0,r.kt)("h3",{id:"any-behavior"},"Any Behavior"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Event"),(0,r.kt)("th",{parentName:"tr",align:null},"Target"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnOwnerDied"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnOwnerSpawned"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnUpgrade"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER")))),(0,r.kt)("h2",{id:"modifer-event-contexts"},"MODIFER EVENT CONTEXTS"),(0,r.kt)("h3",{id:"caster-target"},"Caster-Target"),(0,r.kt)("p",null,"Target always refers to the owner of the modifier."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Event"),(0,r.kt)("th",{parentName:"tr",align:null},"Target"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnCreated"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER, TARGET")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnDestroy"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER, TARGET")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnIntervalThink"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER, TARGET")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnProjectileDodge"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER, TARGET")))),(0,r.kt)("h3",{id:"damage"},"Damage"),(0,r.kt)("p",null,"In these events we can send an extra parameter, referenced as %attack_damage"),(0,r.kt)("p",null,"Note that this is not a value taken from an AbilitySpecial, instead it is generated by the system to be used in very particular events."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Event"),(0,r.kt)("th",{parentName:"tr",align:null},"Target"),(0,r.kt)("th",{parentName:"tr",align:null},"%attack_damage value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnTakeDamage"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER, UNIT, ATTACKER"),(0,r.kt)("td",{parentName:"tr",align:null},"post reduction")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnDealDamage"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER, UNIT, ATTACKER"),(0,r.kt)("td",{parentName:"tr",align:null},"post reduction")))),(0,r.kt)("h3",{id:"attacks"},"Attacks"),(0,r.kt)("p",null,"In some of the attack events we can also use the %attack_damage"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Event"),(0,r.kt)("th",{parentName:"tr",align:null},"Target"),(0,r.kt)("th",{parentName:"tr",align:null},"%attack_damage value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnAttack"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER, TARGET, ATTACKER"),(0,r.kt)("td",{parentName:"tr",align:null},"0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnAttackStart"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER, TARGET, ATTACKER"),(0,r.kt)("td",{parentName:"tr",align:null},"0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnAttackAllied"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER, TARGET, ATTACKER"),(0,r.kt)("td",{parentName:"tr",align:null},"0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnAttacked"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER, TARGET, ATTACKER"),(0,r.kt)("td",{parentName:"tr",align:null},"post reduction")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnAttackLanded"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER, TARGET, ATTACKER"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"before")," reduction, the real attack value")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnAttackFailed"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER, TARGET, ATTACKER"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"before")," reduction, the real attack value")))),(0,r.kt)("h3",{id:"killing"},"Killing"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Event"),(0,r.kt)("th",{parentName:"tr",align:null},"Target"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnDeath"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER, UNIT, ATTACKER")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnKill"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER, UNIT, ATTACKER")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnHeroKilled"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER, TARGET, ATTACKER")))),(0,r.kt)("h3",{id:"caster-unit"},"Caster-Unit"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Event"),(0,r.kt)("th",{parentName:"tr",align:null},"Target"),(0,r.kt)("th",{parentName:"tr",align:null},"Extra"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnAbilityEndChannel"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER, UNIT"),(0,r.kt)("td",{parentName:"tr",align:null},"TARGET if the ability isn't NO_TARGET")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnAbilityExecuted"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER, UNIT"),(0,r.kt)("td",{parentName:"tr",align:null},"TARGET if the ability isn't NO_TARGET")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnOrder"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER, UNIT"),(0,r.kt)("td",{parentName:"tr",align:null},"TARGET if the Order is an ability with target")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnRespawn"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER, UNIT"),(0,r.kt)("td",{parentName:"tr",align:null},'needs "Attributes" "PERMANENT" on its modifier')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnManaGained"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER, UNIT"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnSpentMana"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER, UNIT"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnStateChanged"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER, UNIT"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnTeleporting"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER, UNIT"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnTeleported"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER, UNIT"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnUnitMoved"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER, UNIT"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnHealReceived"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER, UNIT"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OnHealthGained"),(0,r.kt)("td",{parentName:"tr",align:null},"CASTER, UNIT"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",{id:"never-triggered"},"Never Triggered"),(0,r.kt)("p",null,"OnAbilityStart - Broken?"),(0,r.kt)("br",null),(0,r.kt)("p",null,"Please report if you find any inconsistencies."),(0,r.kt)("br",null),(0,r.kt)("p",null,"On the next post you'll find the random rambling analyzed to get the results. "),(0,r.kt)("p",null,"Then we'll move to Multiple Targets, acting over different entities, Flags, etc."))}p.isMDXComponent=!0},6010:(t,e,a)=>{function n(t){var e,a,r="";if("string"==typeof t||"number"==typeof t)r+=t;else if("object"==typeof t)if(Array.isArray(t))for(e=0;e<t.length;e++)t[e]&&(a=n(t[e]))&&(r&&(r+=" "),r+=a);else for(e in t)t[e]&&(r&&(r+=" "),r+=e);return r}function r(){for(var t,e,a=0,r="";a<arguments.length;)(t=arguments[a++])&&(e=n(t))&&(r&&(r+=" "),r+=e);return r}a.d(e,{Z:()=>r})}}]);